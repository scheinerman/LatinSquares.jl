var documenterSearchIndex = {"docs":
[{"location":"#LatinSquares","page":"LatinSquares","title":"LatinSquares","text":"","category":"section"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"This module creates Latin squares and pairs of orthogonal Latin squares. Where possible, simple number-theoretic constructions are used. Otherwise, integer programming.","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"New in version 0.4: The default solver is now HiGHS with non-verbose output.","category":"page"},{"location":"#Usage","page":"LatinSquares","title":"Usage","text":"","category":"section"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"To create a simple n-by-n Latin square, use latin(n):","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"julia> using LatinSquares\n\njulia> latin(5)\n5×5 Array{Int64,2}:\n 1  2  3  4  5\n 2  3  4  5  1\n 3  4  5  1  2\n 4  5  1  2  3\n 5  1  2  3  4","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"To create a pair of n-by-n orthogonal Latin squares, use ortho_latin(n).","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"julia> A,B = ortho_latin(5);\n\njulia> 10A+B\n5×5 Array{Int64,2}:\n 11  22  33  44  55\n 23  34  45  51  12\n 35  41  52  13  24\n 42  53  14  25  31\n 54  15  21  32  43","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"Or to see the two in Latin and Greek letters:","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"julia> print_latin(A,B)\nAα Bβ Cγ Dδ Eε\nBγ Cδ Dε Eα Aβ\nCε Dα Eβ Aγ Bδ\nDβ Eγ Aδ Bε Cα\nEδ Aε Bα Cβ Dγ","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"By default, we use a simple number-theoretic construction. When that fails, we switch to integer programming.","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"julia> A,B = ortho_latin(4);\nNo quick solution. Using integer programming.\n\njulia> 10A+B\n4×4 Array{Int64,2}:\n 43  11  34  22\n 14  42  23  31\n 32  24  41  13\n 21  33  12  44","category":"page"},{"location":"#Self-orthogonal-Latin-squares","page":"LatinSquares","title":"Self orthogonal Latin squares","text":"","category":"section"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"A Latin square is self orthogonal provided it is orthogonal to its transpose. Use ortho_latin(n,true) to create such a self orthogonal Latin square.","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"julia> A,B = ortho_latin(5,true);\n\njulia> 10A+B\n5×5 Array{Int64,2}:\n 11  54  43  32  25\n 45  33  51  24  12\n 34  15  22  41  53\n 23  42  14  55  31\n 52  21  35  13  44\n\njulia> A==B'\ntrue","category":"page"},{"location":"#No-pair-of-orthogonal-Latin-squares-of-order-6","page":"LatinSquares","title":"No pair of orthogonal Latin squares of order 6","text":"","category":"section"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"There does not exist a pair of 6-by-6 orthogonal Latin squares, and this verifies that fact:","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"julia> A,B = ortho_latin(6);","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"However, the run time with the Cbc solver is very long. Changing the code to use the Gurobi solver makes this calculation feasible.","category":"page"},{"location":"#Command-Line","page":"LatinSquares","title":"Command Line","text":"","category":"section"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"In the src directory, the file run_latin.jl allows the user to find orthogonal Latin squares from the command line. The synatx is julia run_julia.jl n.","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"Long-running jobs can be conveniently sent to a file like this:","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"$ nohup julia run_latin.jl 8 > output.txt &","category":"page"},{"location":"#Example","page":"LatinSquares","title":"Example","text":"","category":"section"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"Using the Gurobi solver, we can find a pair of 10-by-10 orthogonal Latin square in a matter of hours. Here's the result:","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"Aα Bβ Cγ Dδ Eε Fζ Gη Hθ Iι Jκ\nBγ Iδ Hζ Eθ Aη Jα Dι Cκ Fε Gβ\nGι Cε Iα Fκ Hδ Eβ Bθ Jζ Dη Aγ\nHκ Dα Fη Aβ Gγ Cθ Iε Bι Jδ Eζ\nIβ Fγ Aε Jη Dθ Gδ Cζ Eα Bκ Hι\nJε Aζ Gθ Hγ Fι Dκ Eδ Iη Cβ Bα\nDζ Eι Bδ Gα Iκ Hε Jγ Fβ Aθ Cη\nCδ Hη Eκ Bε Jβ Aι Fα Dγ Gζ Iθ\nEη Jθ Dβ Cι Bζ Iγ Aκ Gε Hα Fδ\nFθ Gκ Jι Iζ Cα Bη Hβ Aδ Eγ Dε","category":"page"},{"location":"#Other-Solvers","page":"LatinSquares","title":"Other Solvers","text":"","category":"section"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"Use the ChooseOptimizer module to select an alternative solver.","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"We use the HiGHS solver. If you have Gurobi on your system, that solver will run much faster. In that case, do this to switch solver.","category":"page"},{"location":"","page":"LatinSquares","title":"LatinSquares","text":"julia> using Gurobi, LatinSquares, ChooseOptimizer\n\njulia> set_solver(Gurobi)\nGurobiSolver\n\njulia> A,B = ortho_latin(6)\nNo quick solution. Using integer programming.\nAcademic license - for non-commercial use only\nERROR: No pair of orthogonal Latin squares of order 6 can be found.","category":"page"}]
}
